---
- hosts: localhost
  vars:
    apt_packages:
    - vim
    - curl
    - git
    - s3curl
    - s3cmd
    - ansible
    - vim-nox-py2
    - python-pip
    - python-netaddr
    - redis-server
    - apt-transport-https

    pip_packages:
    - jupyter
    - pylxd
    - boto
    - netaddr
    - virtualenv
    - redis

    ymllist:
    - /etc/ansible/roles/brianshumate.consul/tasks/install.yml
    - /etc/ansible/roles/brianshumate.nomad/tasks/install.yml
    - /etc/ansible/roles/brianshumate.vault/tasks/install.yml

    dockerlist:
    - /etc/ansible/roles/brianshumate.nomad/tasks/main.yml

  tasks:
    - name: Apt Install packages
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ apt_packages }}"
      register: apt_results
      tags:
        - apt

    - name: pip upgrade
      shell: pip install --upgrade pip
      register: Pip_upgrade   

    - name: pip Install packages
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ pip_packages }}"
      register: pip_results
      tags:
        - pip

    - name: git clc-sdk
      git:
        repo: https://github.com/CenturyLinkCloud/clc-python-sdk.git
        dest: /srv/clc-python-sdk
      tags:
        - git_clc_sdk

    - name: pip install clc-python-sdk
      pip:
        name: /srv/clc-python-sdk/src
      tags:
        - pip_clc_sdk

    - name: git clc-ansible-module
      git:
        repo: git://github.com/CenturyLinkCloud/clc-ansible-module.git
        dest: /srv/clc-ansible-module
      tags:
        - git_clc_ansible

    - name: pip install clc-ansible-module
      pip:
        name: /srv/clc-ansible-module
      tags:
        - pip_clc_ansible

    - name: "Ansible copy files remote to remote"
      copy:
        src: files/myenv.sh      
        dest: /etc/profile.d
        remote_src: yes
      tags:
        - myenv

    - name: grep - search validate_certs already added to selected files.
      command: grep -c validate_certs "{{ item }}"
      ignore_errors: yes
      register: grep_results
      with_items:
        - "{{ ymllist }}"
      tags:
        - check_validate_certs

    - name: add validate_certs=no if does not exist
      command: "sed -i '/^  local_action: get_url url/ s/$/ validate_certs=no/' {{ item.item }}"
      with_items: "{{ grep_results.results }}"
      when: "{{ item.rc |int == 1 }}"
      tags:
        - add_validate_certs

    - name: grep - docker group nomad already added to selected files.
      command: " grep -c nomad_docker_enable {{ item }}"
      ignore_errors: yes
      register: docker_grep_results
      with_items:
        - "{{ dockerlist }}"
      tags:
        - check_nomad_docker

    - name: docker_grep_results.results
      debug:
        var: docker_grep_results.results

    - name: add nomad docker install on client server 
      shell: "sed -i '/^  when: nomad_docker_enable/ s/$/ and server_role == \"client\" or server_role == \"both\"/' {{ item.item }}"
      with_items: 
        - "{{ docker_grep_results.results }}"
      when: "{{ item.stdout |int == 1 }}"
      tags:
        - add_nomad_docker_client

    - name: generate ssh keys for root
      user:
        name: root
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

#    - name: Append validate_certs to hasicorp download
#      shell: "sed -i '/^  local_action: get_url url/ s/$/ validate_certs no/' {{ item }}"
#      run_once: True
#      with_items:
#      - /etc/ansible/roles/brianshumate.consul/tasks/install.yml
#      - /etc/ansible/roles/brianshumate.nomad/tasks/install.yml
#      - /etc/ansible/roles/brianshumate.vault/tasks/install.yml
#      tags:
#        - validate_certs


